C51 COMPILER V9.60.7.0   MAIN                                                              06/02/2024 00:04:54 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <reg51.h>
   2          #include <stdio.h>
   3          
   4          #define BUTTON P3_2  // Assuming button is connected to P3.2
   5          
   6          void delay(unsigned int millisecond){
   7   1          unsigned int i, j;
   8   1          for (i=0;i<millisecond;i++)
   9   1              for(j=0; j < 1000; j++);
  10   1      }
  11          
  12          void sine_wave(){
  13   1          int sine[] = {128,156,192,226,238,255,238,226,192,128,64,32,6,4,0,16,32,64};
  14   1          int i;
  15   1          for (i=0;i<18;i++){
  16   2              P1 = sine[i];
  17   2              delay(3);
  18   2          }
  19   1      }
  20          
  21          void triangle_wave(){
  22   1          unsigned int i;
  23   1      
  24   1          // Incremental part of the triangle wave
  25   1          for (i = 0; i < 255; i++) {
  26   2              P1 = i;  // Assuming P1 is 8-bit
  27   2              delay(2);  // Adjust delay to control the speed of the waveform
  28   2          }
  29   1      
  30   1          // Decremental part of the triangle wave
  31   1          for (i = 255; i > 0; i--) {
  32   2              P1 = i;  // Assuming P1 is 8-bit
  33   2              delay(2);  // Adjust delay to control the speed of the waveform
  34   2          }
  35   1      }
  36          
  37          void square_wave(){
  38   1        int k;  
  39   1        for (k = 0; k < 100; k++) {  // Run the square wave for 100 cycles
  40   2              P1 = 0xFF;  // Set P1 to high
  41   2              delay(50);  // High duration
  42   2              P1 = 0x00;  // Set P1 to low
  43   2              delay(50);  // Low duration
  44   2          }
  45   1      }
  46          
  47          void setup_interrupts() {
  48   1          IT0 = 1;  // Configure interrupt 0 for falling edge trigger
  49   1          EX0 = 1;  // Enable external interrupt 0
  50   1          EA = 1;   // Enable global interrupts
  51   1      }
  52          
  53          void external0_isr(void) interrupt 0 {
  54   1          static unsigned int wave_selector = 0;
C51 COMPILER V9.60.7.0   MAIN                                                              06/02/2024 00:04:54 PAGE 2   

  55   1          switch (wave_selector % 3) {
  56   2              case 0:
  57   2                  sine_wave();
  58   2                  wave_selector++;
  59   2                  break;
  60   2              case 1:
  61   2                  triangle_wave();
  62   2                  wave_selector++;
  63   2                  break;
  64   2              case 2:
  65   2                  square_wave();
  66   2                  wave_selector = 0;
  67   2                  break;
  68   2          }
  69   1      }
  70          
  71          void main(void){
  72   1          setup_interrupts();
  73   1          while(1){
  74   2          square_wave();
  75   2          }
  76   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    285    ----
   CONSTANT SIZE    =     36    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2      36
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
